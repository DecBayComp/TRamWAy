# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unit tests and code coverage

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  unittests:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
            #- macos-latest
          - windows-latest
        python-version: [3.6, 3.7, 3.8, 3.9]
      fail-fast: true

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install HDF5 (Linux)
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt-get update
        sudo apt-get install h5utils
    - name: Install HDF5 (Windows)
      if: ${{ runner.os == 'Windows' }}
      shell: pwsh
      env:
        HDF5_BINDIR: C:\Program Files\HDF_Group\HDF5\1.10.7\bin
      run: |
        Try {h5diff.exe --version} Catch {
        Invoke-WebRequest -Uri "https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.7/bin/windows/hdf5-1.10.7-Std-win10_64-vs16.zip" -OutFile "${{ github.workspace }}\hdf.zip"
        unzip "${{ github.workspace }}\hdf.zip"
        rm "${{ github.workspace }}\hdf.zip"
        Start-Process -FilePath msiexec.exe -ArgumentList /i, "${{ github.workspace }}\hdf\HDF5-1.10.7-win64.msi", /qn, /log, "${{ github.workspace }}\msi.log" -Wait
        Try { cat "${{ github.workspace }}\msi.log" } Catch { "log file not found" }
        setx path "%PATH%;%HDF5_BINDIR%"
        $env:path
        }
    - name: Install HDF5 (macOS)
      if: ${{ runner.os == 'macOS' }}
      run: |
        brew install ninja
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest
        python -m pip install .[roi]
    - name: Test with pytest (Windows)
      if: ${{ runner.os == 'Windows' }}
      shell: pwsh
      env:
        HDF5_BINDIR: C:\Program Files\HDF_Group\HDF5\1.10.7\bin
      run: >-
        $env:path;
        setx path "%PATH%;%HDF5_BINDIR%";
        $env:path;
        pytest
        tests/test_core.py
        tests/test_analyzer.py::TestSptDataAccess
        tests/test_analyzer.py::TestTesseller
        tests/test_analyzer.py::TestIndexer
        tests/test_analyzer.py::TestAssignment
        tests/test_analyzer.py::TestSideEffects
    - name: Test with pytest (Linux and macOS)
      if: ${{ runner.os != 'Windows' }}
      run: >-
        pytest
        tests/test_core.py
        tests/test_analyzer.py

  coverage:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies and run tests
      run: |
        sudo apt-get update
        sudo apt-get install h5utils
        python -m pip install --upgrade pip
        python -m pip install pytest-cov
        python -m pip install .[roi]
        python -m pytest --cov=./ \
          tests/test_core.py \
          tests/test_analyzer.py
    - uses: codecov/codecov-action@v1
      #with:
      #  fail_ci_if_error: true
